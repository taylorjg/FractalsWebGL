{"version":3,"sources":["webpack://fractalswebgl/./src/service-worker.js"],"names":["webpackManifest","self","__WB_MANIFEST","console","log","JSON","stringify","webpackManifestUrls","map","url","cdnUrls","CURRENT_CACHE_NAME","URLS_TO_CACHE","addEventListener","async","caches","open","addAll","keys","promises","key","delete","Promise","all","event","respondWith","match","request","then","response","fetch"],"mappings":"yBAEM,EAAkB,kYAAK,cAC7B,QAAQ,IACN,mBACA,qBAAqB,KAAK,UAAU,EAAiB,KAAM,MAG7D,MAAM,EAAsB,EAAgB,KAAI,EAAG,SAAU,IAAI,MACjE,QAAQ,IACN,mBACA,yBAAyB,KAAK,UAAU,EAAqB,KAAM,MAGrE,MAAM,EAAU,CACd,mFACA,mFACA,iFACA,gEACA,iFACA,0EAEF,QAAQ,IACN,mBACA,aAAa,KAAK,UAAU,EAAS,KAAM,MAG7C,MACM,EAAqB,gBACrB,EAAgB,IAAI,KAAwB,GAElD,KAAK,iBAAiB,WAAW,UAC/B,QAAQ,IAAI,mCACQ,OAAO,KAAK,IAC1B,OAAO,EAAc,IAG7B,KAAK,iBAAiB,YAAY,UAChC,QAAQ,IAAI,6BACZ,MAAM,QAAa,OAAO,OAC1B,QAAQ,IAAI,yCAAyC,KAAK,UAAU,MACpE,MAAM,EAAW,EAAK,KAAK,IACzB,GAAI,GAAO,EAET,OADA,QAAQ,IAAI,gDAAgD,KACrD,OAAO,OAAO,EACvB,IAEF,OAAO,QAAQ,IAAI,EAAS,IAG9B,KAAK,iBAAiB,SAAU,GAC9B,EAAM,YACJ,OACG,MAAM,EAAM,SACZ,MAAM,GAAc,GAAsB,MAAM,EAAM","file":"service-worker.js","sourceRoot":"","sourcesContent":["import packageJson from \"../package.json\";\n\nconst webpackManifest = self.__WB_MANIFEST;\nconsole.log(\n  \"[service worker]\",\n  `webpackManifest:\\n${JSON.stringify(webpackManifest, null, 2)}`\n);\n\nconst webpackManifestUrls = webpackManifest.map(({ url }) => `/${url}`);\nconsole.log(\n  \"[service worker]\",\n  `webpackManifestUrls:\\n${JSON.stringify(webpackManifestUrls, null, 2)}`\n);\n\nconst cdnUrls = [\n  \"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.css\",\n  \"https://cdnjs.cloudflare.com/ajax/libs/bootcards/1.1.2/css/bootcards-desktop.css\",\n  \"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.css\",\n  \"https://cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.js\",\n  \"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.7/js/bootstrap.js\",\n  \"https://cdnjs.cloudflare.com/ajax/libs/bootcards/1.1.2/js/bootcards.js\",\n];\nconsole.log(\n  \"[service worker]\",\n  `cdnUrls:\\n${JSON.stringify(cdnUrls, null, 2)}`\n);\n\nconst CURRENT_CACHE_VERSION = packageJson.version;\nconst CURRENT_CACHE_NAME = `cache-v${CURRENT_CACHE_VERSION}`;\nconst URLS_TO_CACHE = [...webpackManifestUrls, ...cdnUrls];\n\nself.addEventListener(\"install\", async () => {\n  console.log(\"[service worker install]\");\n  const cache = await caches.open(CURRENT_CACHE_NAME);\n  cache.addAll(URLS_TO_CACHE);\n});\n\nself.addEventListener(\"activate\", async () => {\n  console.log(\"[service worker activate]\");\n  const keys = await caches.keys();\n  console.log(`[service worker activate] old caches: ${JSON.stringify(keys)}`);\n  const promises = keys.map((key) => {\n    if (key != CURRENT_CACHE_NAME) {\n      console.log(`[service worker activate] deleting old cache ${key}`);\n      return caches.delete(key);\n    }\n  });\n  return Promise.all(promises);\n});\n\nself.addEventListener(\"fetch\", (event) =>\n  event.respondWith(\n    caches\n      .match(event.request)\n      .then((response) => (response ? response : fetch(event.request)))\n  )\n);\n"]}